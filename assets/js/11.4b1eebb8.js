(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{335:function(a,s,t){"use strict";t.r(s);var n=t(3),r=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("把事务分解成一个个对象然后由对象之间分工与合作"),s("br"),a._v("灵活，代码可复用，容易维护和开发的优点\n"),s("a",{attrs:{name:"x9LsM"}})]),a._v(" "),s("h4",{attrs:{id:"特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[a._v("#")]),a._v(" 特性")]),a._v(" "),s("ul",[s("li",[a._v("封装性")]),a._v(" "),s("li",[a._v("继承性")]),a._v(" "),s("li",[a._v("多态性\n"),s("a",{attrs:{name:"4vjZI"}})])]),a._v(" "),s("h2",{attrs:{id:"_1-es6中的类和对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-es6中的类和对象"}},[a._v("#")]),a._v(" 1 ES6中的类和对象")]),a._v(" "),s("p",[s("a",{attrs:{name:"UAXIk"}})]),a._v(" "),s("h3",{attrs:{id:"_1-1-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-对象"}},[a._v("#")]),a._v(" 1.1 对象")]),a._v(" "),s("p",[a._v("对象是一个具体的事物，看得见摸得着的事物。一本书，一辆汽车"),s("br"),a._v("在js中，对象是一组无序的相关属性的方法的集合，所有的事物都是对象，例如字符串、数据、数组等"),s("br"),a._v("对象由属性和方法")]),a._v(" "),s("ul",[s("li",[a._v("属性：事物的特征")]),a._v(" "),s("li",[a._v("方法：事物的行为\n"),s("a",{attrs:{name:"qpmTj"}})])]),a._v(" "),s("h3",{attrs:{id:"_1-2-类-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-类-class"}},[a._v("#")]),a._v(" 1.2 类 class")]),a._v(" "),s("p",[a._v("类抽象了对象的公共部分，泛指了某一大类"),s("br"),a._v("对象特指某一个，通过类实例化一个具体的对象"),s("br"),a._v("面向对象的思维特点")]),a._v(" "),s("ol",[s("li",[a._v("抽取(抽象)对象共用的属性和行为组织(封装)成一个类")]),a._v(" "),s("li",[a._v("对类进行实例化，获取类的对象\n"),s("a",{attrs:{name:"bPv38"}})])]),a._v(" "),s("h3",{attrs:{id:"_1-3-类语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-类语法"}},[a._v("#")]),a._v(" 1.3 类语法")]),a._v(" "),s("p",[a._v("通过class关键字创建类，类名习惯首字母大写"),s("br"),a._v("类里面有constructor函数，可以接受传递过来的参数，同时返回实例对象"),s("br"),a._v("constructor函数只要new生成实例时，就会自动调用这个函数，如果不写也会自动生成函数"),s("br"),a._v("语法规范："),s("br"),a._v("创建类 类名后不跟小括号，生成实例，类名后加小括号，构成函数不需要加function")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//创建一个叫明星的类\nclass star{\n\tconstructor(uname){\n  \tthis.uname = uname\n  }\n  //创建方法\n  sing(song){\n  \tconsole.log(this.uname + song)\n  }\n}\n//利用类创建对象new\nvar ldh = new star('ldh')\nconsole.log(ldh.uname)\n//调用方法\nldh.sing('aaa')\nconsole.log(ldh)//输出ldhaaa\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("ol",[s("li",[a._v("类里面所有的函数不需要写function")]),a._v(" "),s("li",[a._v("多个函数方法之间不需要添加逗号分割\n"),s("a",{attrs:{name:"3aEIn"}})])]),a._v(" "),s("h3",{attrs:{id:"_1-4-类的继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-类的继承"}},[a._v("#")]),a._v(" 1.4 类的继承")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("class Father{\n\tconstructor(x,y){\n  \tthis.x = x\n    this.y = y\n  }\n  sum(){\n  \tconsole.log(this.x + this.y)\n  }\n}\nclass Son extends Father(){\n\tconstructor(x,y){\n \t\tsuper(x,y)//调用父类中的构造函数中的数据\n    super.sum()//调用父类中的普通函数 sum()\n  }\n}\nvar son = new Son(1,2)\nson.sum()\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("p",[s("a",{attrs:{name:"4zVlR"}})]),a._v(" "),s("h3",{attrs:{id:"_1-5-es6中的类和对象的注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-es6中的类和对象的注意点"}},[a._v("#")]),a._v(" 1.5 ES6中的类和对象的注意点")]),a._v(" "),s("p",[a._v("在ES6中类没有变量提升，所有必须先定义类，才能通过类实例化对象"),s("br"),a._v("类里面的共有属性和方法一定要加this使用"),s("br"),a._v("注意类的指向问题")]),a._v(" "),s("ul",[s("li",[a._v("constructor指向实例对象")]),a._v(" "),s("li",[a._v("方法指向的是调用的函数")]),a._v(" "),s("li",[a._v("如果在方法中调用类中数据可以在外围定义var that方便调用\n"),s("a",{attrs:{name:"W1P1H"}})])]),a._v(" "),s("h2",{attrs:{id:"_2-构造函数和原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-构造函数和原型"}},[a._v("#")]),a._v(" 2 构造函数和原型")]),a._v(" "),s("p",[s("a",{attrs:{name:"lsHsf"}})]),a._v(" "),s("h3",{attrs:{id:"_2-1-创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建对象"}},[a._v("#")]),a._v(" 2.1 创建对象")]),a._v(" "),s("ol",[s("li",[a._v("利用 new Object() 创建对象")])]),a._v(" "),s("p",[a._v("var obj1 = new Object()")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("利用对象字面量创建对象")])]),a._v(" "),s("p",[a._v("var obj = {}")]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("利用构造函数创建对象")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function Star(uname,age){\n  this.uname = uname\n  this.age = age\n  this.sing = function(){\n  console.log('aaa')\n  }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("var ldh = new Star('ldh',19)"),s("br"),a._v("ldh.sing()//调用公共方法\n"),s("a",{attrs:{name:"Ji104"}})]),a._v(" "),s("h3",{attrs:{id:"_2-2-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-构造函数"}},[a._v("#")]),a._v(" 2.2 构造函数")]),a._v(" "),s("p",[a._v("构造函数是一种特殊的函数，主要是用来初始化对象，对象成员变量赋初始值，它总与new一起使用，把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面\n"),s("a",{attrs:{name:"YYEYh"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-1-new在执行中会做四件事情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-new在执行中会做四件事情"}},[a._v("#")]),a._v(" 2.2.1 new在执行中会做四件事情")]),a._v(" "),s("ol",[s("li",[a._v("在内存中创建一个新的空对象")]),a._v(" "),s("li",[a._v("让this指向这个新的对象")]),a._v(" "),s("li",[a._v("执行构造函数里面的代码，给这个新对象添加属性和方法")]),a._v(" "),s("li",[a._v("返回这个新对象(构造函数不需要return)\n"),s("a",{attrs:{name:"4kpNR"}})])]),a._v(" "),s("h4",{attrs:{id:"_2-2-2-实例成员和静态成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-实例成员和静态成员"}},[a._v("#")]),a._v(" 2.2.2 实例成员和静态成员")]),a._v(" "),s("p",[a._v("构造函数中的属性和方法称为成员，可以添加成员"),s("br"),a._v("实例成员：构造函数内部通过this添加成员"),s("br"),a._v("ldh.sing()"),s("br"),a._v("静态成员：通过构造函数本身上添加的成员 只能通过构造函数来访问"),s("br"),a._v("Star.sex = '男'\n"),s("a",{attrs:{name:"gt33U"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-3-构造函数的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-构造函数的问题"}},[a._v("#")]),a._v(" 2.2.3 构造函数的问题")]),a._v(" "),s("p",[a._v("构造函数方法很好用，但是存在浪费内存的问题\n"),s("a",{attrs:{name:"FE0Co"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-4-构造函数原型-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-构造函数原型-prototype"}},[a._v("#")]),a._v(" 2.2.4 构造函数原型 prototype")]),a._v(" "),s("p",[a._v("构造函数通过原型奉分配的函数是所有对象所共享的"),s("br"),a._v("每一个构造函数都有一个prototype属性，指向另一个对象，prototype是一个对象，这个对象的所有属性和方法，都会被构造函数所拥有"),s("br"),a._v("一般情况下，公共属性定义到构造函数里面，公共方法可以方法原型对象上")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Star.prototype.sing = function(){\nconsole.log('sss')\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[s("a",{attrs:{name:"N5AbQ"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-5-对象原型-proto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-对象原型-proto"}},[a._v("#")]),a._v(" 2.2.5 对象原型 "),s("strong",[a._v("proto")])]),a._v(" "),s("p",[a._v("对象都会有一个属性 __proto__指向构造函数的prototype原型对象，因为__proto__的存在，对象可以使用构造函数prototype原型对象的属性和方法")]),a._v(" "),s("ul",[s("li",[a._v("__proto__对象原型和原型对象prototype是等价的")])]),a._v(" "),s("p",[a._v("ldh._ "),s("em",[a._v("proto")]),a._v("_  === Star.prototype")]),a._v(" "),s("ul",[s("li",[a._v("意义在于为对象的查找机制提供一个方向，但是是一个非标准属性，因此实际开发中，不可以使用这个属性，它只是内部指向原型对象prototype\n"),s("a",{attrs:{name:"bPFe1"}})])]),a._v(" "),s("h4",{attrs:{id:"_2-2-6-构造函数-constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-构造函数-constructor"}},[a._v("#")]),a._v(" 2.2.6 构造函数 constructor")]),a._v(" "),s("p",[a._v("__proto__和prototype都有一个属性constructor属性，constructor称为构造函数，指回构造函数本身"),s("br"),a._v("记录对象引用哪个构造函数，它可以让原型对象重新指向原来的构造函数"),s("br"),a._v("如果修改了原来的原型对象，给原型对象赋值的是一个对象，则必须手动利用constructor指回原来的构造函数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Star.prototype = {\n\tconstructor:Star,\n  sing:function(){\n  \tconsole.log('aaa')\n  }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("a",{attrs:{name:"Ru2pt"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-7-原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-原型链"}},[a._v("#")]),a._v(" 2.2.7 原型链")]),a._v(" "),s("p",[a._v("就近原则"),s("br"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/12415669/1612797403166-6701c888-5000-4605-afac-b7bb607e1984.png#crop=0&crop=0&crop=1&crop=1&height=181&id=gnN50&margin=%5Bobject%20Object%5D&name=image.png&originHeight=361&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=115097&status=done&style=none&title=&width=367",alt:"image.png"}}),a._v(" "),s("a",{attrs:{name:"dJOJT"}})]),a._v(" "),s("h4",{attrs:{id:"_2-2-8-原型对象this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-原型对象this指向"}},[a._v("#")]),a._v(" 2.2.8 原型对象this指向")]),a._v(" "),s("ol",[s("li",[a._v("在构造函数中，里面this指向的是对象实例 ldh")]),a._v(" "),s("li",[a._v("原型对象函数里面的this指向的是实例对象 ldh\n"),s("a",{attrs:{name:"krkez"}})])]),a._v(" "),s("h4",{attrs:{id:"_2-2-9-扩展内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-9-扩展内置对象"}},[a._v("#")]),a._v(" 2.2.9 扩展内置对象")]),a._v(" "),s("p",[a._v("通过对原型对象，对原来的内置对象进行扩展自定义的方法"),s("br"),a._v("注意：数组和字符串内置对象不能给原型对象覆盖操作Array.pototype = {},只能是Array.prototype.xxx = function(){}的方式\n"),s("a",{attrs:{name:"e9R4U"}})]),a._v(" "),s("h3",{attrs:{id:"_2-3-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-继承"}},[a._v("#")]),a._v(" 2.3 继承")]),a._v(" "),s("p",[a._v("在ES6之前并没有提供extends继承，可以通过构造函数+原型对象模拟实现继承，称为组合继承\n"),s("a",{attrs:{name:"Ua6Je"}})]),a._v(" "),s("h4",{attrs:{id:"_2-3-1-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-call"}},[a._v("#")]),a._v(" 2.3.1 call()")]),a._v(" "),s("p",[a._v("修改函数运行的this指向")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fun.call(thisAsg,arg1,arg2,...)\nfunction fn(x,y){\n\tconsole.log('aaa');\n}\nvar o = {\n\tname:'andy'\n}\nfn();//调用函数 fn === fn.call()\nfn.call(o,1,2)//改变函数的this指向到o这个对象，且传值\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("thisAsg:当前调用函数this的指向对象\n"),s("a",{attrs:{name:"4G1pl"}})]),a._v(" "),s("h4",{attrs:{id:"_2-3-2-借用构造函数继承父类型属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-借用构造函数继承父类型属性"}},[a._v("#")]),a._v(" 2.3.2 借用构造函数继承父类型属性")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//1 父构造函数\nfunction Father(uname,age){\n\tthis.uname = uname\n  this.age = age\n}\n\n//2 子构造函数\nfunction Son(uname,age,scroe){\n\tFather.call(this,uname,age)//Father的this指向Son中的this\n  this.scroe = scroe\n}\nvar son = new Son('sss',19,100)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[s("a",{attrs:{name:"uo4DS"}})]),a._v(" "),s("h4",{attrs:{id:"_2-3-3-借用构造函数继承父类型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-借用构造函数继承父类型方法"}},[a._v("#")]),a._v(" 2.3.3 借用构造函数继承父类型方法")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//不能直接赋值  这样直接赋值会有问题，如果修改了Son原型对象，父原型对象也会跟着一起变化\nSon.prototype = Father.prototype\n//正确使用方法\nSon.prototype = new Father();//创建一个新的实例对象\n//利用对象的形式修改了原型对象，别忘了利用constructor指回原来的原型对象\nSon.prototype.constructor = Son;\n//子构造函数专门的方法\nSon.prototype.exam = function(){\n\tconsole.log('aaa');\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("p",[s("a",{attrs:{name:"eAZhX"}})]),a._v(" "),s("h3",{attrs:{id:"_2-4-es5中的新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-es5中的新增方法"}},[a._v("#")]),a._v(" 2.4 ES5中的新增方法")]),a._v(" "),s("p",[s("a",{attrs:{name:"EHZIG"}})]),a._v(" "),s("h4",{attrs:{id:"_2-4-1-数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-数组方法"}},[a._v("#")]),a._v(" 2.4.1 数组方法")]),a._v(" "),s("p",[a._v("迭代(遍历)方法")]),a._v(" "),s("ul",[s("li",[a._v("forEach()")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("array.forEach(function(Value,index,arr))\n//Value 数组当前项的值\n//index 数组当前项的索引\n//arr 数组对象本身\nvar arr = [1,2,3]\nvar sum = 0;\narr.forEach(function(v,i,a){\n\tsum += v;\n})\nconsole.log(sum)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("ul",[s("li",[a._v("map() 返回一个新数组")])]),a._v(" "),s("p",[a._v("数组中的元素为原始数组元素调用函数处理后的值"),s("br"),a._v("map不会对空数组进行检测 不会改变原始数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var numbers = [4, 9, 16, 25];\nvar newNumber = numbers.map(function(v){\n\treturn v*2\n})\nconsole.log(newNumber)\n//Array[8,18,32,50]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("ul",[s("li",[a._v("filer()筛选数组")])]),a._v(" "),s("p",[a._v("创建一个新数组，新数组中的元素是通过检查指定数组中符合条件的所有元素"),s("br"),a._v("直接返回一个新数组"),s("br"),a._v("不会对空数组进行检测 不会改变原始数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [1,4,8,6];\nvar newArr = arr.filter(function(v,i){\n\treturn v >= 4\n})\nconsole.log(newArr)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ul",[s("li",[a._v("some()检测数组中元素是否满足指定条件")])]),a._v(" "),s("p",[a._v("如果第一个满足条件便会停止循环 返回布尔值"),s("br"),a._v("不会对空数组进行检测 不会改变原始数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [10,20,13]\nvar flag = arr.some(function(v){\n\treturn v >= 20\n});\nconsole.log(flag) ture\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ul",[s("li",[a._v("every()用于检测数组所有元素是否都符合指定条件 (通过函数提供)")])]),a._v(" "),s("p",[a._v("有一个不满足，返回false 且不会继续检测"),s("br"),a._v("不会对空数组进行检测 不会改变原始数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [10,20,13]\nvar flag = arr.every(function(v){\n\treturn v <= 20\n});\nconsole.log(flag) //true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("a",{attrs:{name:"6NGaq"}})]),a._v(" "),s("h4",{attrs:{id:"_2-4-2-字符串方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-字符串方法"}},[a._v("#")]),a._v(" 2.4.2 字符串方法")]),a._v(" "),s("ul",[s("li",[a._v("trim() 去除前后空格 不会去除中间\n"),s("a",{attrs:{name:"XuF0t"}})])]),a._v(" "),s("h4",{attrs:{id:"_2-4-3-对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-3-对象方法"}},[a._v("#")]),a._v(" 2.4.3 对象方法")]),a._v(" "),s("ul",[s("li",[a._v("Object.keys(obj)")])]),a._v(" "),s("p",[a._v("获取对象自身所有的属性"),s("br"),a._v("效果类似for...in 返回一个由属性名组成的数组")]),a._v(" "),s("ul",[s("li",[a._v("object.defineProperty()定义新属性或修改原有的属性")])]),a._v(" "),s("p",[a._v("object.defineProperty(对象，属性名字，目标属性拥有的特性)"),s("br"),a._v("第三个参数：以对象形式{ }书写")]),a._v(" "),s("ul",[s("li",[a._v("value:设置属性的值，默认underfind")]),a._v(" "),s("li",[a._v("writable:值是否重写，true | false 默认false 不允许")]),a._v(" "),s("li",[a._v("enumerable:目标属性是否可以被枚举，true | false 默认false 不遍历")]),a._v(" "),s("li",[a._v("configurable:目标属性是否可以被删除或是否可以再次修改特性 true | false 默认false\n"),s("a",{attrs:{name:"iAboe"}})])]),a._v(" "),s("h2",{attrs:{id:"_3-函数进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-函数进阶"}},[a._v("#")]),a._v(" 3 函数进阶")]),a._v(" "),s("p",[s("a",{attrs:{name:"Tt6Mc"}})]),a._v(" "),s("h3",{attrs:{id:"_3-1-函数定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-函数定义"}},[a._v("#")]),a._v(" 3.1 函数定义")]),a._v(" "),s("p",[s("a",{attrs:{name:"z0te2"}})]),a._v(" "),s("h4",{attrs:{id:"_3-1-1-函数的定义方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-函数的定义方式"}},[a._v("#")]),a._v(" 3.1.1 函数的定义方式")]),a._v(" "),s("ol",[s("li",[a._v("自定义函数(命名函数)")])]),a._v(" "),s("p",[a._v("function fn(){"),s("br"),a._v("}")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("函数表达式(匿名函数)")])]),a._v(" "),s("p",[a._v("var fn = function(){"),s("br"),a._v("}")]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("利用new Function('参数1','参数2','函数体',)")])]),a._v(" "),s("p",[a._v("var f = new Function('a','b','console.log(a + b)')"),s("br"),a._v("f(1,2)")]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("所有函数都是Function的实例(对象)")])]),a._v(" "),s("p",[a._v("console.log(f)")]),a._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[a._v("函数也属于对象")])]),a._v(" "),s("p",[a._v("console.log(f instanceof Object)"),s("br"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/12415669/1613576291680-cef405b2-2707-483c-bb83-3813ee795ea9.png#crop=0&crop=0&crop=1&crop=1&height=156&id=WmKZ6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=635&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71577&status=done&style=none&title=&width=400",alt:"image.png"}}),a._v(" "),s("a",{attrs:{name:"2LBUx"}})]),a._v(" "),s("h4",{attrs:{id:"_3-1-2-函数的调用以及this指向问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-函数的调用以及this指向问题"}},[a._v("#")]),a._v(" 3.1.2 函数的调用以及this指向问题")]),a._v(" "),s("ol",[s("li",[a._v("普通函数 指向window")])]),a._v(" "),s("p",[a._v("function fn(){"),s("br"),a._v("}"),s("br"),a._v("fn()   or    fn.call()")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("对象的方法  指向实例对象o 原型对象里面的方法也指向实例对象")])]),a._v(" "),s("p",[a._v("var o = {"),s("br"),a._v("sayHi:function(){"),s("br"),a._v("console.log('aaa')"),s("br"),a._v("}"),s("br"),a._v("}"),s("br"),a._v("o.sayHi()")]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("构造函数  该方法所属对象")])]),a._v(" "),s("p",[a._v("function Star(){}"),s("br"),a._v("new Star()")]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("绑定事件函数  绑定事件对象")])]),a._v(" "),s("p",[a._v("btn.onclick = function(){}//点击按钮调用函数")]),a._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[a._v("定时器函数  window")])]),a._v(" "),s("p",[a._v("setInverval(function(){},1000)")]),a._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[a._v("立即执行函数  window")])]),a._v(" "),s("p",[a._v("(function(){"),s("br"),a._v("console.log('aaa')"),s("br"),a._v("})()"),s("br"),a._v("自动调用\n"),s("a",{attrs:{name:"i4v3j"}})]),a._v(" "),s("h4",{attrs:{id:"_3-1-3-改变函数内this的指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-改变函数内this的指向"}},[a._v("#")]),a._v(" 3.1.3 改变函数内this的指向")]),a._v(" "),s("ul",[s("li",[a._v("call()")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var o ={\n\tname : 'andy';\n}\nfunction fn(a,b){\n\tconsole.log(this);//window\n  console.log(a + b);\n}\n//改变指向\n//call第一个位置可以调用函数，第二个位置可以改变函数内的this指向 主要作用实现继承\nfn.call(o,1,2);//3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("ul",[s("li",[a._v("apply()")])]),a._v(" "),s("p",[a._v("里面只能传数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//主要应用 利用apply借助数学内置对象求最大值\nvar arr = [1,66,3,99,4]\nvar arr1 = ['red','pink']\nvar max = Math.max.apply(Math,arr)\nvar min = Math.min.apply(Math,arr)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ul",[s("li",[a._v("bind()")])]),a._v(" "),s("p",[a._v("不会调用原来的函数 可以改变原来函数内部的this 指向"),s("br"),a._v("返回的是原函数改变this之后产生的新函数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//需求\n//点击之后禁用按钮，3秒后开启\nvar btn = document.querySelector('button')\nfor(var i = 0;i < btn.length;i++){\n  btn[i].onclick = function(){\n    this.disabled = true;//=>btn\n    setTimeout(function(){\n      this.disabled = false//=>btn\n    }.bind(this),3000)//=>btn\n  }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[s("a",{attrs:{name:"zL65d"}})]),a._v(" "),s("h4",{attrs:{id:"_3-1-4-严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-严格模式"}},[a._v("#")]),a._v(" 3.1.4 严格模式")]),a._v(" "),s("ol",[s("li",[a._v("ES5的严格模式是采用限制性JS变体的一种模式，在严格条件下运行js代码\n"),s("ul",[s("li",[a._v("消除了js语法的一些不合理、不严谨之处，减少了一些怪异行为")]),a._v(" "),s("li",[a._v("消除代码运行的一些不安全之处，保证代码运行的安全")]),a._v(" "),s("li",[a._v("提高编译器效率")]),a._v(" "),s("li",[a._v("禁用了在未来版本中可以会定义的语法，为未来新版本做铺垫")])])]),a._v(" "),s("li",[a._v("开启严格模式")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//为脚本开启严格模式\n<script>\n  (function(){\n  \t'use strict';\n  })();\n<\/script>\n//为某个函数开启严格模式\n<script>\n  function fn(){\n \t\t 'use strict';\n  }\n<\/script>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("3.严格模式的变化"),s("br"),a._v("this指向")]),a._v(" "),s("ul",[s("li",[a._v("变量名必须先声明再使用  不能随意删除已经声明好的变量")]),a._v(" "),s("li",[a._v("全局作用域中this是undefined")]),a._v(" "),s("li",[a._v("以前构造函数时不加new也可以调用，当普通函数，this指向全局对象")]),a._v(" "),s("li",[a._v("严格模式下，如果构造函数不加new调用，this会报错")]),a._v(" "),s("li",[a._v("new实例化的构造函数指向构建的对象实例")]),a._v(" "),s("li",[a._v("定时器this还是指向window")]),a._v(" "),s("li",[a._v("事件、对象还是指向调用者")])]),a._v(" "),s("p",[a._v("函数变化")]),a._v(" "),s("ul",[s("li",[a._v("函数名内不允许有重复的参数")]),a._v(" "),s("li",[a._v("必须声明在顶层作用域 不允许在非函数的代码块内声明函数\n"),s("a",{attrs:{name:"FQ54M"}})])]),a._v(" "),s("h4",{attrs:{id:"_3-1-5-高阶函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-5-高阶函数"}},[a._v("#")]),a._v(" 3.1.5 高阶函数")]),a._v(" "),s("p",[a._v("对其他函数进行操作的函数，接收函数作为参数或将函数作为返回值输出")])])}),[],!1,null,null,null);s.default=r.exports}}]);